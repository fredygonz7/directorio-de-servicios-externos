{"version":3,"sources":["components/Loading.js","api/directoryAPI.js","api/jsonplaceholder.js","services/servicesDirectory.js","components/directory/DirectoryListScreen.js","hooks/useDirectories.js","hooks/useForm.js","components/directory/DirectoryRegisterScreen.js","logo.svg","components/auth/LoginScreen.js","services/servicesAuth.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","App.js","index.js"],"names":["Loading","className","directoryAPI","axios","create","baseURL","fetchAllDirectories","a","get","res","data","DirectoryListScreen","useState","isLoading","setIsLoading","directories","setDirectories","useEffect","then","useDirectories","console","log","style","width","map","id","NombreServicio","PaginaWeb","CorreoElectronico","type","useForm","initialState","formValues","setValues","formReset","handleInputChange","target","name","value","checked","DirectoryScreen","TipoServicio","ServicioDomicilio","HorarioAtencion","onSubmit","event","preventDefault","config","headers","Authorization","localStorage","getItem","post","fetchCreateDirectory","response","status","statusText","placeholder","onChange","htmlFor","LoginScreen","history","useHistory","email","password","src","logo","alt","access_token","setItem","push","autoComplete","RegisterScreen","AuthRouter","exact","path","component","to","AppRouter","DirectoryRegisterScreen","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4663fff.chunk.js","sourcesContent":["export const Loading = () => {\r\n    return (\r\n        <div className=\"alert alert-info\">\r\n            <p>Cargando...</p>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const directoryAPI = axios.create({\r\n    baseURL: 'http://prueba.nualtec.com/api/api/v1/'\r\n    // baseURL: 'http://localhost:8000/api/v1/'\r\n});","import axios from \"axios\";\r\n\r\nexport const jsonplaceholderApi = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'    \r\n});","// import axios from 'axios';\r\nimport { jsonplaceholderApi } from '../api/jsonplaceholder';\r\nimport { directoryAPI } from '../api/directoryAPI';\r\n\r\n// const API_URL = 'https://jsonplaceholder.typicode.com';\r\n// const servicesDirectory = {\r\n//     register: (data) => {\r\n//         const config = {\r\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n//         };\r\n//         return axios.post(`${API_URL}/posts`, { ...data }, config)\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst fetchAllDirectories = async () => {\r\n    const res = await directoryAPI.get('/directorioServicio')\r\n    //const res = await jsonplaceholderApi.get('/posts')\r\n    // .then(({ data, status, statusText }) => {\r\n        \r\n        //     console.log(data);\r\n        //     return { ...data, status, statusText  };\r\n        // }, ({ response: { status, statusText } }) => {\r\n    //     if (status === 400) {\r\n    //         return ({ status, statusText });\r\n    //     }\r\n    // });\r\n    // console.log(res.data);\r\n    return (res.data.data)\r\n}\r\n\r\nconst fetchCreateDirectory = (data) => {\r\n    // localStorage.setItem(\"token\", \"access_token\")\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    };\r\n    // return jsonplaceholderApi.post(`/posts`, { ...data }, config)\r\n    return directoryAPI.post(`/directorioServicio`, { ...data }, config)\r\n}\r\n\r\nconst fetchUpdateDirectory = (data, id = 1) => {\r\n    // localStorage.setItem(\"token\", \"access_token\")\r\n    const config = {\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        }\r\n    };\r\n    // return jsonplaceholderApi.put(`/posts/${id}`, { ...data })\r\n    return directoryAPI.put(`/directorioServicio/${id}`, { ...data }, config)\r\n}\r\n\r\nconst fetchDeleteDirectory = (data, id = 1) => {\r\n    // localStorage.setItem(\"token\", \"access_token\")\r\n    const config = {\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        }\r\n    };\r\n    // return jsonplaceholderApi.put(`/posts/${id}`, { ...data })\r\n    return directoryAPI.delete(`/directorioServicio/${id}`, config)\r\n}\r\n\r\nexport { fetchAllDirectories, fetchCreateDirectory, fetchUpdateDirectory, fetchDeleteDirectory };","// import { useState } from \"react\";\r\nimport { Loading } from \"../../components/Loading\";\r\nimport { useDirectories } from \"../../hooks/useDirectories\";\r\n\r\nexport const DirectoryListScreen = () => {\r\n    const { isLoading, directories } = useDirectories();\r\n    console.log(directories);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Lista de lugares</h1>\r\n            <hr />\r\n            \r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width:100}}>ID</th>\r\n                        <th style={{ width: 150}}>Nombre</th>\r\n                        <th style={{ width: 150}}>PaginaWeb</th>\r\n                        <th style={{ width: 150}}>CorreoElectronico</th>\r\n                        <th style={{ width: 150}}>Opciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        directories.map(({id,NombreServicio,PaginaWeb,CorreoElectronico}) => (\r\n                            <tr key={id}>\r\n                                <td>{id}</td>\r\n                                <td>{NombreServicio}</td>\r\n                                <td>{PaginaWeb}</td>\r\n                                <td>{CorreoElectronico}</td>\r\n                                <td><button type=\"submit\" className=\"btn btn-primary\">Eliminar</button></td>\r\n                            </tr>\r\n                        ))\r\n                        /*\r\n                        directories.map(({ id, title }) => (\r\n                            <tr key={id}>\r\n                                <td>{id}</td>\r\n                                <td>{title}</td>\r\n                                <td><button type=\"submit\" className=\"btn btn-primary\">Eliminar</button></td>\r\n                            </tr>\r\n                        ))*/\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {isLoading && <Loading />}\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { fetchAllDirectories } from '../services/servicesDirectory';\r\n\r\nexport const useDirectories = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [directories, setDirectories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // carga de los directories\r\n        fetchAllDirectories()\r\n            .then(directories => {\r\n                setIsLoading(false);\r\n                setDirectories(directories);\r\n            });\r\n    }, []);\r\n\r\n    return {\r\n        isLoading,\r\n        directories\r\n    }\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [formValues, setValues] = useState(initialState);\r\n\r\n    const formReset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        if (target.type !== \"checkbox\") {\r\n            setValues({\r\n                ...formValues,\r\n                [target.name]: target.value\r\n            })\r\n        } else {\r\n            setValues({\r\n                ...formValues,\r\n                [target.name]: target.checked\r\n            })\r\n        }\r\n    }\r\n    return [formValues, handleInputChange, formReset];\r\n}","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n// import logo from '../../logo.svg';\r\n\r\n// import { sendForm } from '../../fetch/FetchGeneral';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { fetchCreateDirectory, fetchUpdateDirectory } from '../../services/servicesDirectory';\r\n\r\nconst DirectoryScreen = () => {\r\n    const [formValues, handleInputChange, formReset] = useForm(\r\n        {\r\n            NombreServicio: '',\r\n            TipoServicio: '',\r\n            ServicioDomicilio: false,\r\n            HorarioAtencion: '',\r\n            PaginaWeb: '',\r\n            CorreoElectronico: '',\r\n        });\r\n\r\n    const { NombreServicio,\r\n        TipoServicio,\r\n        ServicioDomicilio,\r\n        HorarioAtencion,\r\n        PaginaWeb,\r\n        CorreoElectronico\r\n    } = formValues\r\n\r\n    const handleDirectoty = (event) => {\r\n\r\n        event.preventDefault();\r\n        \r\n        // sendForm({ ...formValues, \"tokenId\": localStorage.getItem('token') }, formReset)\r\n        // servicesDirectory.register({ ...formValues, \"token\": localStorage.getItem('token') }).then((\r\n        fetchCreateDirectory(formValues).then((\r\n            { data }) => {\r\n            console.log(data);\r\n            formReset();\r\n        }, ({ response: { status, statusText } }) => {\r\n            if (status === 400) {\r\n                console.log(\"Error\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Directorio</h1>\r\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p> */}\r\n                <form onSubmit={handleDirectoty}>\r\n                    {/* <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n                    </div> */}\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"NombreServicio\" className=\"form-control\"\r\n                            name=\"NombreServicio\" value={NombreServicio} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <select className=\"form-select\" name=\"TipoServicio\" value={TipoServicio} onChange={handleInputChange}>\r\n                            <option>Seleccione una opción</option>\r\n                            <option value=\"One\">One</option>\r\n                            <option value=\"2\">Two</option>\r\n                            <option value=\"3\">Three</option>\r\n                        </select>\r\n                        {/* <input type=\"text\" placeholder=\"TipoServicio\" className=\"form-control\"\r\n                            name=\"TipoServicio\" value={TipoServicio} onChange={handleInputChange} /> */}\r\n                    </div>\r\n                    <div className=\"form-check mb-3\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\"\r\n                            name=\"ServicioDomicilio\" checked={ServicioDomicilio} onChange={handleInputChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckServicioDomicilio\">\r\n                            ServicioDomicilio\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"HorarioAtencion\" className=\"form-control\"\r\n                            name=\"HorarioAtencion\" value={HorarioAtencion} onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"PaginaWeb\" className=\"form-control\"\r\n                            name=\"PaginaWeb\" value={PaginaWeb} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"email\" placeholder=\"CorreoElectronico\" className=\"form-control\"\r\n                            name=\"CorreoElectronico\" value={CorreoElectronico} onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Enviar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\nexport default DirectoryScreen;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport logo from '../../logo.svg';\r\nimport { fetchAuthLogin } from '../../services/servicesAuth';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [formValues, handleInputChange] = useForm({ email: 'joelpahe18@gmail.com', password: 'password' });\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleDirectoty = (event) => {\r\n        event.preventDefault();\r\n        // sendForm(formValues, formReset)\r\n        fetchAuthLogin(formValues).then((\r\n            { data: { access_token } }) => {\r\n            localStorage.setItem(\"token\", access_token)\r\n\r\n            history.push('/directorio')\r\n        }, ({ response: { status, statusText } }) => {\r\n            if (status === 400) {\r\n                console.log(\"Error\");\r\n            }\r\n        }\r\n        )\r\n        // servicesAuth.login(formValues).then((\r\n        //     // { data: { access_token, token_type } }) => {\r\n\r\n        //     // localStorage.setItem(\"token\", access_token)\r\n        //     // localStorage.setItem(\"token_type\", token_type)\r\n        //     { data: { access_token } }) => {\r\n\r\n        //     localStorage.setItem(\"token\", access_token)\r\n        //     // history.push('../../')DirectoryListScreen\r\n        //     history.push('/directorio')\r\n        // }, ({ response: { status, statusText } }) => {\r\n        //     if (status === 400) {\r\n        //         console.log(\"Error\");\r\n        //     }\r\n        // }\r\n        // )\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Login</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                {/* <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p> */}\r\n                <form onSubmit={handleDirectoty}>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"Email\" autoComplete=\"off\" className=\"form-control\"\r\n                            name=\"email\" value={email} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"password\" placeholder=\"Contraseña\" className=\"form-control\"\r\n                            name=\"password\" value={password} onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Ingresar\r\n                    </button>\r\n                </form>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\nexport { LoginScreen };","// import axios from 'axios';\r\nimport { directoryAPI } from '../api/directoryAPI';\r\n\r\n// const API_URL = 'http://localhost:8000/api/v1/auth';\r\n\r\n// const servicesAuth = {\r\n//     login: (infoUsuario) => {\r\n//         return axios.post(`${API_URL}/login`, { ...infoUsuario })\r\n//     },\r\n//     register: (usuario) => {\r\n//         // const config = {\r\n//         //     headers: { Authorization: `Bearer ${token}` }\r\n//         // };\r\n//         return axios.post(`${API_URL}/auth/signup`, { ...usuario })\r\n//     }\r\n// }\r\n\r\nconst fetchAuthLogin = (data) => {\r\n    return directoryAPI.post(`/auth/login`, { ...data })\r\n}\r\n\r\n/*\r\nconst fetchAuthRegister = (data) => {\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    };\r\n    return directoryAPI.post(`/auth/register`, { ...data }, config)\r\n}\r\n*/\r\n\r\nexport { fetchAuthLogin }","import React from 'react'\r\n\r\nexport const RegisterScreen = () => {\r\n    // return (\r\n    //     <div>\r\n    //         <h1>RegisterScreen</h1>\r\n    //     </div>\r\n    // )\r\n    // const [email, setEmail] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form>\r\n        {/* <input type=\"text\" placeholder=\"Email\" autoComplete=\"off\"\r\n          name=\"email\" onChange={(ev) => setEmail(ev.target.value)} /> */}\r\n\r\n        {/* <input type=\"password\" placeholder=\"Contraseña\"\r\n                    name=\"password\" value={password} onChange={handleInputChange}>\r\n                </input> */}\r\n\r\n        <button type=\"submit\">\r\n          Ingresar\r\n        </button>\r\n        <hr />\r\n        <div\r\n          className=\"google-btn\"\r\n        >\r\n          <div className=\"google-icon-wrapper\">\r\n            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n          </div>\r\n          <p className=\"btn-text\">\r\n            <b>Sign in with google</b>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","// import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                />\r\n\r\n                <Route exact path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default AuthRouter;","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { DirectoryListScreen } from '../components/directory/DirectoryListScreen';\r\nimport DirectoryRegisterScreen from '../components/directory/DirectoryRegisterScreen';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\nimport AuthRouter from './AuthRouter';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        component={LoginScreen}>\r\n                        {/* {DirectoryScreen} */}\r\n                    </Route>\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/directorio\"\r\n                        component={DirectoryListScreen}>\r\n                        {/* {DirectoryScreen} */}\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/register\" component={DirectoryRegisterScreen}>\r\n                        {/* {DirectoryScreen} */}\r\n                    </Route>\r\n\r\n                    <Route path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\nexport { AppRouter };","import './App.css';\n// import DirectoryScreen from './components/directory/DirectoryScreen';\nimport { AppRouter } from './routers/AppRouter';\n// import React, { useState } from 'react';\n\nconst App = ()=> {\n  return (\n    <AppRouter />\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}