{"version":3,"sources":["components/Loading.js","api/directoryAPI.js","services/servicesDirectory.js","components/directory/DirectoryListScreen.js","hooks/useDirectories.js","hooks/useForm.js","components/directory/DirectoryRegisterScreen.js","logo.svg","components/auth/LoginScreen.js","services/servicesAuth.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","App.js","index.js"],"names":["Loading","className","directoryAPI","axios","create","baseURL","fetchAllDirectories","a","get","res","data","DirectoryListScreen","useState","isLoading","setIsLoading","directories","setDirectories","useEffect","then","useDirectories","console","log","eliminarServicio","id","config","headers","localStorage","getItem","delete","fetchDeleteDirectory","catch","err","style","width","map","NombreServicio","PaginaWeb","CorreoElectronico","type","onClick","useForm","initialState","formValues","setValues","formReset","handleInputChange","target","name","value","checked","DirectoryRegisterScreen","TipoServicio","ServicioDomicilio","HorarioAtencion","CorreoElectronico_confirmation","onSubmit","event","preventDefault","Authorization","post","fetchCreateDirectory","message","placeholder","onChange","htmlFor","LoginScreen","history","useHistory","email","password","src","logo","alt","setItem","access_token","push","autoComplete","RegisterScreen","AuthRouter","exact","path","component","to","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c84dd615.chunk.js","sourcesContent":["export const Loading = () => {\r\n    return (\r\n        <div className=\"alert alert-info\">\r\n            <p>Cargando...</p>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const directoryAPI = axios.create({\r\n    baseURL: 'https://prueba.nualtec.com/api/api/v1/'\r\n    // baseURL: 'http://localhost:8000/api/v1/'\r\n});","// import axios from 'axios';\r\n// import { jsonplaceholderApi } from '../api/jsonplaceholder';\r\nimport { directoryAPI } from '../api/directoryAPI';\r\n\r\n// const API_URL = 'https://jsonplaceholder.typicode.com';\r\n// const servicesDirectory = {\r\n//     register: (data) => {\r\n//         const config = {\r\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n//         };\r\n//         return axios.post(`${API_URL}/posts`, { ...data }, config)\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst fetchAllDirectories = async () => {\r\n    const res = await directoryAPI.get('/directorioServicio')\r\n    //const res = await jsonplaceholderApi.get('/posts')\r\n    // .then(({ data, status, statusText }) => {\r\n        \r\n        //     console.log(data);\r\n        //     return { ...data, status, statusText  };\r\n        // }, ({ response: { status, statusText } }) => {\r\n    //     if (status === 400) {\r\n    //         return ({ status, statusText });\r\n    //     }\r\n    // });\r\n    // console.log(res.data);\r\n    return (res.data.data)\r\n}\r\n\r\nconst fetchCreateDirectory = (data) => {\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    };\r\n    console.log(\"token\",localStorage.getItem('token'));\r\n    // return jsonplaceholderApi.post(`/posts`, { ...data }, config)\r\n    return directoryAPI.post(`/directorioServicio`, { ...data }, config)\r\n}\r\n\r\nconst fetchUpdateDirectory = (data, id = 1) => {\r\n    // localStorage.setItem(\"token\", \"access_token\")\r\n    const config = {\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        }\r\n    };\r\n    // return jsonplaceholderApi.put(`/posts/${id}`, { ...data })\r\n    return directoryAPI.put(`/directorioServicio/${id}`, { ...data }, config)\r\n}\r\n\r\nconst fetchDeleteDirectory = (id) => {\r\n    // localStorage.setItem(\"token\", \"access_token\")\r\n    const config = {\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        }\r\n    };\r\n    // return jsonplaceholderApi.put(`/posts/${id}`, { ...data })\r\n    return directoryAPI.delete(`/directorioServicio/${id}`, config)\r\n}\r\n\r\nexport { fetchAllDirectories, fetchCreateDirectory, fetchUpdateDirectory, fetchDeleteDirectory };","// import { useState } from \"react\";\r\nimport { Loading } from \"../../components/Loading\";\r\nimport { useDirectories } from \"../../hooks/useDirectories\";\r\nimport { fetchDeleteDirectory } from \"../../services/servicesDirectory\";\r\n\r\nexport const DirectoryListScreen = () => {\r\n    const { isLoading, directories } = useDirectories();\r\n    console.log(directories);\r\n\r\n    const eliminarServicio = (id) => {\r\n        fetchDeleteDirectory(id)\r\n            // .then(data => {\r\n            //     console.log(\"Eliminado\", data)\r\n            // }, error => {\r\n            //     console.log(\"Error al eliminar\", error)\r\n            // })*/\r\n            .then(data => {\r\n                console.log(\"Eliminado\", data)\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    // const eliminar = (id) => {\r\n\r\n    //     console.log(id)\r\n    //     return;\r\n\r\n\r\n    //     fetchDeleteDirectory(id).then(data => {\r\n\r\n\r\n\r\n    //     }, error => {\r\n\r\n\r\n\r\n    //     });\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Lista de lugares</h1>\r\n            <hr />\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: 100 }}>ID</th>\r\n                        <th style={{ width: 150 }}>Nombre</th>\r\n                        <th style={{ width: 150 }}>PaginaWeb</th>\r\n                        <th style={{ width: 150 }}>CorreoElectronico</th>\r\n                        <th style={{ width: 150 }}>Opciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        directories.map(({ id, NombreServicio, PaginaWeb, CorreoElectronico }) => (\r\n                            <tr key={id}>\r\n                                <td>{id}</td>\r\n                                <td>{NombreServicio}</td>\r\n                                <td>{PaginaWeb}</td>\r\n                                <td>{CorreoElectronico}</td>\r\n                                <td><button type=\"button\" onClick={eliminarServicio(id)} className=\"btn btn-primary\">Eliminar</button></td>\r\n                            </tr>\r\n                        ))\r\n                        /*\r\n                        directories.map(({ id, title }) => (\r\n                            <tr key={id}>\r\n                                <td>{id}</td>\r\n                                <td>{title}</td>\r\n                                <td><button type=\"submit\" className=\"btn btn-primary\">Eliminar</button></td>\r\n                            </tr>\r\n                        ))*/\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {isLoading && <Loading />}\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { fetchAllDirectories } from '../services/servicesDirectory';\r\n\r\nexport const useDirectories = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [directories, setDirectories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // carga de los directories\r\n        fetchAllDirectories()\r\n            .then(directories => {\r\n                setIsLoading(false);\r\n                setDirectories(directories);\r\n            });\r\n    }, []);\r\n\r\n    return {\r\n        isLoading,\r\n        directories\r\n    }\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [formValues, setValues] = useState(initialState);\r\n\r\n    const formReset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        if (target.type !== \"checkbox\") {\r\n            setValues({\r\n                ...formValues,\r\n                [target.name]: target.value\r\n            })\r\n        } else {\r\n            setValues({\r\n                ...formValues,\r\n                [target.name]: target.checked\r\n            })\r\n        }\r\n    }\r\n    return [formValues, handleInputChange, formReset];\r\n}","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n// import logo from '../../logo.svg';\r\n\r\n// import { sendForm } from '../../fetch/FetchGeneral';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { fetchCreateDirectory } from '../../services/servicesDirectory';\r\n\r\nconst DirectoryRegisterScreen = () => {\r\n    const [formValues, handleInputChange, formReset] = useForm({\r\n        //     NombreServicio: '',\r\n        //     TipoServicio: '',\r\n        //     ServicioDomicilio: false,\r\n        //     HorarioAtencion: '',\r\n        //     PaginaWeb: '',\r\n        //     CorreoElectronico: '',\r\n        //     CorreoElectronico_confirmation: ''\r\n        // });\r\n        NombreServicio: 'Abastos El Ajonjoli',\r\n        TipoServicio: 'tienda',\r\n        ServicioDomicilio: false,\r\n        HorarioAtencion: '7am - 7pm ',\r\n        PaginaWeb: 'http://www.ajonjoli.com',\r\n        CorreoElectronico: 'ajonjoli.sincelejo@gmail.com',\r\n        CorreoElectronico_confirmation: 'ajonjoli.sincelejo@gmail.com'\r\n    });\r\n\r\n    const { NombreServicio,\r\n        TipoServicio,\r\n        ServicioDomicilio,\r\n        HorarioAtencion,\r\n        PaginaWeb,\r\n        CorreoElectronico,\r\n        CorreoElectronico_confirmation\r\n    } = formValues\r\n\r\n    const registerDirectoty = (event) => {\r\n        event.preventDefault();\r\n        console.log(formValues);\r\n        fetchCreateDirectory(formValues)\r\n            .then(data => {\r\n            console.log(data.message, data)\r\n            formReset();\r\n        }).catch(err => {\r\n            console.log(\"Error\", err);\r\n        });\r\n\r\n        //     .then((\r\n        //     { data }) => {\r\n        //     console.log(data.message);\r\n        //     formReset();\r\n        // }, ({ response: { status, statusText } }) => {\r\n        //     if (status === 400) {\r\n        //         console.log(\"Error\");\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Directorio</h1>\r\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p> */}\r\n                <form onSubmit={registerDirectoty}>\r\n                    {/* <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n                    </div> */}\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"NombreServicio\" className=\"form-control\"\r\n                            name=\"NombreServicio\" value={NombreServicio} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <select className=\"form-select\" name=\"TipoServicio\" value={TipoServicio} onChange={handleInputChange}>\r\n                            <option>Seleccione un tipo de servicio</option>\r\n                            <option value=\"drogueria\">Drogueria</option>\r\n                            <option value=\"tienda\">Tienda</option>\r\n                            <option value=\"otro\">Otro</option>\r\n                        </select>\r\n                        {/* <input type=\"text\" placeholder=\"TipoServicio\" className=\"form-control\"\r\n                            name=\"TipoServicio\" value={TipoServicio} onChange={handleInputChange} /> */}\r\n                    </div>\r\n                    <div className=\"form-check mb-3\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\"\r\n                            name=\"ServicioDomicilio\" checked={ServicioDomicilio} onChange={handleInputChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckServicioDomicilio\">\r\n                            ServicioDomicilio\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"HorarioAtencion\" className=\"form-control\"\r\n                            name=\"HorarioAtencion\" value={HorarioAtencion} onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"PaginaWeb\" className=\"form-control\"\r\n                            name=\"PaginaWeb\" value={PaginaWeb} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"email\" placeholder=\"CorreoElectronico\" className=\"form-control\"\r\n                            name=\"CorreoElectronico\" value={CorreoElectronico} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"email\" placeholder=\"CorreoElectronico_confirmation\" className=\"form-control\"\r\n                            name=\"CorreoElectronico_confirmation\" value={CorreoElectronico_confirmation} onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Enviar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\nexport default DirectoryRegisterScreen;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport logo from '../../logo.svg';\r\nimport { fetchAuthLogin } from '../../services/servicesAuth';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [formValues, handleInputChange] = useForm({ email: 'joelpahe18@gmail.com', password: 'password' });\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleDirectoty = (event) => {\r\n        event.preventDefault();\r\n        // sendForm(formValues, formReset)\r\n        fetchAuthLogin(formValues).then(data => {\r\n            localStorage.setItem(\"token\", data.data.access_token)\r\n            // console.log(data.data);\r\n            history.push('/directorio')\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        /*.then((\r\n        { data: { access_token } }) => {\r\n        localStorage.setItem(\"token\", access_token)\r\n        console.log(access_token);\r\n        history.push('/directorio')\r\n        }, ({ response: { status, statusText } }) => {\r\n            // if (status === 400) {\r\n            //     console.log(\"Error\");\r\n            // }\r\n            console.log(\"no conecta\");\r\n        })*/\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Login</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                {/* <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p> */}\r\n                <form onSubmit={handleDirectoty}>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" placeholder=\"Email\" autoComplete=\"off\" className=\"form-control\"\r\n                            name=\"email\" value={email} onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"password\" placeholder=\"Contraseña\" className=\"form-control\"\r\n                            name=\"password\" value={password} onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Ingresar\r\n                    </button>\r\n                </form>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\nexport { LoginScreen };","// import axios from 'axios';\r\nimport { directoryAPI } from '../api/directoryAPI';\r\n\r\n// const API_URL = 'http://localhost:8000/api/v1/auth';\r\n\r\n// const servicesAuth = {\r\n//     login: (infoUsuario) => {\r\n//         return axios.post(`${API_URL}/login`, { ...infoUsuario })\r\n//     },\r\n//     register: (usuario) => {\r\n//         // const config = {\r\n//         //     headers: { Authorization: `Bearer ${token}` }\r\n//         // };\r\n//         return axios.post(`${API_URL}/auth/signup`, { ...usuario })\r\n//     }\r\n// }\r\n\r\nconst fetchAuthLogin = (data) => {\r\n    return directoryAPI.post(`/auth/login`, { ...data })\r\n}\r\n\r\n/*\r\nconst fetchAuthRegister = (data) => {\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    };\r\n    return directoryAPI.post(`/auth/register`, { ...data }, config)\r\n}\r\n*/\r\n\r\nexport { fetchAuthLogin }","import React from 'react'\r\n\r\nexport const RegisterScreen = () => {\r\n    // return (\r\n    //     <div>\r\n    //         <h1>RegisterScreen</h1>\r\n    //     </div>\r\n    // )\r\n    // const [email, setEmail] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form>\r\n        {/* <input type=\"text\" placeholder=\"Email\" autoComplete=\"off\"\r\n          name=\"email\" onChange={(ev) => setEmail(ev.target.value)} /> */}\r\n\r\n        {/* <input type=\"password\" placeholder=\"Contraseña\"\r\n                    name=\"password\" value={password} onChange={handleInputChange}>\r\n                </input> */}\r\n\r\n        <button type=\"submit\">\r\n          Ingresar\r\n        </button>\r\n        <hr />\r\n        <div\r\n          className=\"google-btn\"\r\n        >\r\n          <div className=\"google-icon-wrapper\">\r\n            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n          </div>\r\n          <p className=\"btn-text\">\r\n            <b>Sign in with google</b>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","// import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                />\r\n\r\n                <Route exact path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default AuthRouter;","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { DirectoryListScreen } from '../components/directory/DirectoryListScreen';\r\nimport DirectoryRegisterScreen from '../components/directory/DirectoryRegisterScreen';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\nimport AuthRouter from './AuthRouter';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        component={LoginScreen}>\r\n                        {/* {DirectoryScreen} */}\r\n                    </Route>\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/directorio\"\r\n                        component={DirectoryListScreen}>\r\n                        {/* {DirectoryScreen} */}\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/directorio/registrar\" component={DirectoryRegisterScreen}>\r\n                        {/* {DirectoryScreen} */}\r\n                    </Route>\r\n\r\n                    <Route path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\nexport { AppRouter };","import './App.css';\n// import DirectoryScreen from './components/directory/DirectoryScreen';\nimport { AppRouter } from './routers/AppRouter';\n// import React, { useState } from 'react';\n\nconst App = ()=> {\n  return (\n    <AppRouter />\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}