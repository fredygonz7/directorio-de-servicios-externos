{"version":3,"sources":["components/Loading.js","api/directoryAPI.js","api/jsonplaceholder.js","services/servicesDirectory.js","components/directory/DirectoryListScreen.js","hooks/useDirectories.js","hooks/useForm.js","components/directory/DirectoryRegisterScreen.js","logo.svg","components/auth/LoginScreen.js","services/servicesAuth.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","App.js","index.js"],"names":["Loading","className","directoryAPI","axios","create","baseURL","fetchAllDirectories","a","get","res","data","DirectoryListScreen","useState","isLoading","setIsLoading","directories","setDirectories","useEffect","then","useDirectories","console","log","style","width","map","id","NombreServicio","PaginaWeb","CorreoElectronico","type","useForm","initialState","formValues","setValues","formReset","handleInputChange","target","name","value","checked","DirectoryScreen","TipoServicio","ServicioDomicilio","HorarioAtencion","onSubmit","event","preventDefault","config","headers","Authorization","localStorage","getItem","post","fetchCreateDirectory","response","status","statusText","placeholder","onChange","htmlFor","LoginScreen","history","useHistory","email","password","src","logo","alt","access_token","setItem","push","autoComplete","RegisterScreen","AuthRouter","exact","path","component","to","AppRouter","DirectoryRegisterScreen","App","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAU,WACnB,OACI,qBAAKC,UAAU,mBAAf,SACI,+C,wDCDCC,GCAqBC,IAAMC,OAAO,CAC3CC,QAAS,yCDDeF,IAAMC,OAAO,CACrCC,QAAS,uCEaPC,EAAmB,uCAAG,4BAAAC,EAAA,sEACNL,EAAaM,IAAI,uBADX,cAClBC,EADkB,yBAahBA,EAAIC,KAAKA,MAbO,2CAAH,qDCZZC,EAAsB,WAC/B,MCF0B,WAC1B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAWA,OATAC,qBAAU,WAENX,IACKY,MAAK,SAAAH,GACFD,GAAa,GACbE,EAAeD,QAExB,IAEI,CACHF,YACAE,eDb+BI,GAA3BN,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,YAGnB,OAFAK,QAAQC,IAAIN,GAGR,sBAAKd,UAAU,YAAf,UACI,kDACA,uBAEA,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIqB,MAAO,CAACC,MAAM,KAAlB,gBACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,oBACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,uBACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,+BACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,2BAGR,gCAEQR,EAAYS,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,eAAeC,EAApB,EAAoBA,UAAUC,EAA9B,EAA8BA,kBAA9B,OACZ,+BACI,6BAAKH,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAI,wBAAQC,KAAK,SAAS5B,UAAU,kBAAhC,0BALCwB,WAmBxBZ,GAAa,cAAC,EAAD,Q,QE3CbiB,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GACnC,EAAgCnB,mBAASmB,GAAzC,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,WACdD,EAAUF,IAGRI,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACL,aAAhBA,EAAOP,KACPI,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,SAG1BL,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOG,YAIlC,MAAO,CAACP,EAAYG,EAAmBD,ICgF5BM,EA9FS,WACpB,MAAmDV,EAC/C,CACIJ,eAAgB,GAChBe,aAAc,GACdC,mBAAmB,EACnBC,gBAAiB,GACjBhB,UAAW,GACXC,kBAAmB,KAP3B,mBAAOI,EAAP,KAAmBG,EAAnB,KAAsCD,EAAtC,KAUQR,EAMJM,EANIN,eACJe,EAKAT,EALAS,aACAC,EAIAV,EAJAU,kBACAC,EAGAX,EAHAW,gBACAhB,EAEAK,EAFAL,UACAC,EACAI,EADAJ,kBAoBJ,OACI,qBAAK3B,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,4CAKA,uBAAM2C,SAzBM,SAACC,GAErBA,EAAMC,iBJGe,SAACpC,GAE1B,IAAMqC,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,YAG7D,OAAOjD,EAAakD,KAAb,qCAA8C1C,GAAQqC,GILzDM,CAAqBrB,GAAYd,MAAK,YACpB,IAAZR,EAAW,EAAXA,KACFU,QAAQC,IAAIX,GACZwB,OACD,YAA2C,IAAD,IAAvCoB,SAAYC,EAA2B,EAA3BA,OAA2B,EAAnBC,WACP,MAAXD,GACAnC,QAAQC,IAAI,aAaZ,UAKI,qBAAKpB,UAAU,OAAf,SACI,uBAAO4B,KAAK,OAAO4B,YAAY,iBAAiBxD,UAAU,eACtDoC,KAAK,iBAAiBC,MAAOZ,EAAgBgC,SAAUvB,MAE/D,qBAAKlC,UAAU,OAAf,SACI,yBAAQA,UAAU,cAAcoC,KAAK,eAAeC,MAAOG,EAAciB,SAAUvB,EAAnF,UACI,8DACA,wBAAQG,MAAM,MAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,wBAKR,sBAAKrC,UAAU,kBAAf,UACI,uBAAOA,UAAU,mBAAmB4B,KAAK,WACrCQ,KAAK,oBAAoBE,QAASG,EAAmBgB,SAAUvB,IACnE,uBAAOlC,UAAU,mBAAmB0D,QAAQ,6BAA5C,kCAIJ,qBAAK1D,UAAU,OAAf,SACI,uBAAO4B,KAAK,OAAO4B,YAAY,kBAAkBxD,UAAU,eACvDoC,KAAK,kBAAkBC,MAAOK,EAAiBe,SAAUvB,MAGjE,qBAAKlC,UAAU,OAAf,SACI,uBAAO4B,KAAK,OAAO4B,YAAY,YAAYxD,UAAU,eACjDoC,KAAK,YAAYC,MAAOX,EAAW+B,SAAUvB,MAErD,qBAAKlC,UAAU,OAAf,SACI,uBAAO4B,KAAK,QAAQ4B,YAAY,oBAAoBxD,UAAU,eAC1DoC,KAAK,oBAAoBC,MAAOV,EAAmB8B,SAAUvB,MAGrE,qBAAKlC,UAAU,OAAf,SACI,wBAAQA,UAAU,kBAAkB4B,KAAK,SAAzC,+BC7FT,MAA0B,iCCQnC+B,EAAc,WAEhB,IAAMC,EAAUC,cAEhB,EAAwChC,EAAQ,CAAEiC,MAAO,uBAAwBC,SAAU,aAA3F,mBAAOhC,EAAP,KAAmBG,EAAnB,KAEQ4B,EAAoB/B,EAApB+B,MAAOC,EAAahC,EAAbgC,SAkCf,OACI,qBAAK/D,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,uCACA,qBAAKgE,IAAKC,EAAMjE,UAAU,WAAWkE,IAAI,SAIzC,uBAAMvB,SAxCM,SAACC,GCCN,IAACnC,EDAhBmC,EAAMC,kBCAUpC,EDEDsB,ECIZ9B,EAAakD,KAAb,6BAAsC1C,KDJdQ,MAAK,YACI,IAAtBkD,EAAqB,EAA7B1D,KAAQ0D,aACVlB,aAAamB,QAAQ,QAASD,GAE9BP,EAAQS,KAAK,kBACd,YAA2C,IAAD,IAAvChB,SAAYC,EAA2B,EAA3BA,OAA2B,EAAnBC,WACP,MAAXD,GACAnC,QAAQC,IAAI,aA8BZ,UACI,qBAAKpB,UAAU,OAAf,SACI,uBAAO4B,KAAK,OAAO4B,YAAY,QAAQc,aAAa,MAAMtE,UAAU,eAChEoC,KAAK,QAAQC,MAAOyB,EAAOL,SAAUvB,MAE7C,qBAAKlC,UAAU,OAAf,SACI,uBAAO4B,KAAK,WAAW4B,YAAY,gBAAaxD,UAAU,eACtDoC,KAAK,WAAWC,MAAO0B,EAAUN,SAAUvB,MAGnD,wBAAQN,KAAK,SAAS5B,UAAU,kBAAhC,+BEhEPuE,EAAiB,WAQ5B,OACE,gCACE,uCAEA,iCAQE,wBAAQ3C,KAAK,SAAb,sBAGA,uBACA,sBACE5B,UAAU,aADZ,UAGE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,cAAcgE,IAAI,8EAA8EE,IAAI,oBAErH,mBAAGlE,UAAU,WAAb,SACE,gECTGwE,EAlBI,WACf,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cACdC,UAAWhB,IAGf,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,iBACdC,UAAWJ,IAGf,cAAC,IAAD,CAAUK,GAAG,sBCVvBC,EAAY,WACd,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACA,cAAC,IAAD,CACQJ,OAAK,EACLC,KAAK,IACLC,UAAWhB,IAIf,cAAC,IAAD,CACIc,OAAK,EACLC,KAAK,cACLC,UAAWjE,IAIf,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,YAAYC,UAAWG,IAIzC,cAAC,IAAD,CAAOJ,KAAK,QACRC,UAAWH,IAGf,cAAC,IAAD,CAAUI,GAAG,wBCzBlBG,EALH,WACV,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2123b766.chunk.js","sourcesContent":["export const Loading = () => {\n    return (\n        <div className=\"alert alert-info\">\n            <p>Cargando...</p>\n        </div>\n    )\n}\n","import axios from \"axios\";\n\nexport const directoryAPI = axios.create({\n    baseURL: 'http://prueba.nualtec.com/api/v1/'\n    // baseURL: 'http://localhost:8000/api/v1/'\n});","import axios from \"axios\";\n\nexport const jsonplaceholderApi = axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com'    \n});","// import axios from 'axios';\nimport { jsonplaceholderApi } from '../api/jsonplaceholder';\nimport { directoryAPI } from '../api/directoryAPI';\n\n// const API_URL = 'https://jsonplaceholder.typicode.com';\n// const servicesDirectory = {\n//     register: (data) => {\n//         const config = {\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n//         };\n//         return axios.post(`${API_URL}/posts`, { ...data }, config)\n//     }\n// }\n\n\n\nconst fetchAllDirectories = async () => {\n    const res = await directoryAPI.get('/directorioServicio')\n    //const res = await jsonplaceholderApi.get('/posts')\n    // .then(({ data, status, statusText }) => {\n        \n        //     console.log(data);\n        //     return { ...data, status, statusText  };\n        // }, ({ response: { status, statusText } }) => {\n    //     if (status === 400) {\n    //         return ({ status, statusText });\n    //     }\n    // });\n    // console.log(res.data);\n    return (res.data.data)\n}\n\nconst fetchCreateDirectory = (data) => {\n    // localStorage.setItem(\"token\", \"access_token\")\n    const config = {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n    };\n    // return jsonplaceholderApi.post(`/posts`, { ...data }, config)\n    return directoryAPI.post(`/directorioServicio`, { ...data }, config)\n}\n\nconst fetchUpdateDirectory = (data, id = 1) => {\n    // localStorage.setItem(\"token\", \"access_token\")\n    const config = {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Content-type': 'application/json; charset=UTF-8',\n        }\n    };\n    // return jsonplaceholderApi.put(`/posts/${id}`, { ...data })\n    return directoryAPI.put(`/directorioServicio/${id}`, { ...data }, config)\n}\n\nconst fetchDeleteDirectory = (data, id = 1) => {\n    // localStorage.setItem(\"token\", \"access_token\")\n    const config = {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Content-type': 'application/json; charset=UTF-8',\n        }\n    };\n    // return jsonplaceholderApi.put(`/posts/${id}`, { ...data })\n    return directoryAPI.delete(`/directorioServicio/${id}`, config)\n}\n\nexport { fetchAllDirectories, fetchCreateDirectory, fetchUpdateDirectory, fetchDeleteDirectory };","// import { useState } from \"react\";\nimport { Loading } from \"../../components/Loading\";\nimport { useDirectories } from \"../../hooks/useDirectories\";\n\nexport const DirectoryListScreen = () => {\n    const { isLoading, directories } = useDirectories();\n    console.log(directories);\n\n    return (\n        <div className=\"container\">\n            <h1>Lista de lugares</h1>\n            <hr />\n            \n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th style={{width:100}}>ID</th>\n                        <th style={{ width: 150}}>Nombre</th>\n                        <th style={{ width: 150}}>PaginaWeb</th>\n                        <th style={{ width: 150}}>CorreoElectronico</th>\n                        <th style={{ width: 150}}>Opciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        directories.map(({id,NombreServicio,PaginaWeb,CorreoElectronico}) => (\n                            <tr key={id}>\n                                <td>{id}</td>\n                                <td>{NombreServicio}</td>\n                                <td>{PaginaWeb}</td>\n                                <td>{CorreoElectronico}</td>\n                                <td><button type=\"submit\" className=\"btn btn-primary\">Eliminar</button></td>\n                            </tr>\n                        ))\n                        /*\n                        directories.map(({ id, title }) => (\n                            <tr key={id}>\n                                <td>{id}</td>\n                                <td>{title}</td>\n                                <td><button type=\"submit\" className=\"btn btn-primary\">Eliminar</button></td>\n                            </tr>\n                        ))*/\n                    }\n                </tbody>\n            </table>\n            {isLoading && <Loading />}\n        </div>\n    )\n}","import { useEffect, useState } from 'react'\nimport { fetchAllDirectories } from '../services/servicesDirectory';\n\nexport const useDirectories = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [directories, setDirectories] = useState([]);\n\n    useEffect(() => {\n        // carga de los directories\n        fetchAllDirectories()\n            .then(directories => {\n                setIsLoading(false);\n                setDirectories(directories);\n            });\n    }, []);\n\n    return {\n        isLoading,\n        directories\n    }\n}\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n    const [formValues, setValues] = useState(initialState);\n\n    const formReset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        if (target.type !== \"checkbox\") {\n            setValues({\n                ...formValues,\n                [target.name]: target.value\n            })\n        } else {\n            setValues({\n                ...formValues,\n                [target.name]: target.checked\n            })\n        }\n    }\n    return [formValues, handleInputChange, formReset];\n}","import React from 'react'\nimport { useForm } from '../../hooks/useForm';\n// import logo from '../../logo.svg';\n\n// import { sendForm } from '../../fetch/FetchGeneral';\n// import { useHistory } from 'react-router-dom';\nimport { fetchCreateDirectory, fetchUpdateDirectory } from '../../services/servicesDirectory';\n\nconst DirectoryScreen = () => {\n    const [formValues, handleInputChange, formReset] = useForm(\n        {\n            NombreServicio: '',\n            TipoServicio: '',\n            ServicioDomicilio: false,\n            HorarioAtencion: '',\n            PaginaWeb: '',\n            CorreoElectronico: '',\n        });\n\n    const { NombreServicio,\n        TipoServicio,\n        ServicioDomicilio,\n        HorarioAtencion,\n        PaginaWeb,\n        CorreoElectronico\n    } = formValues\n\n    const handleDirectoty = (event) => {\n\n        event.preventDefault();\n        \n        // sendForm({ ...formValues, \"tokenId\": localStorage.getItem('token') }, formReset)\n        // servicesDirectory.register({ ...formValues, \"token\": localStorage.getItem('token') }).then((\n        fetchCreateDirectory(formValues).then((\n            { data }) => {\n            console.log(data);\n            formReset();\n        }, ({ response: { status, statusText } }) => {\n            if (status === 400) {\n                console.log(\"Error\");\n            }\n        })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Directorio</h1>\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p> */}\n                <form onSubmit={handleDirectoty}>\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\n                    </div> */}\n                    <div className=\"mb-3\">\n                        <input type=\"text\" placeholder=\"NombreServicio\" className=\"form-control\"\n                            name=\"NombreServicio\" value={NombreServicio} onChange={handleInputChange} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <select className=\"form-select\" name=\"TipoServicio\" value={TipoServicio} onChange={handleInputChange}>\n                            <option>Seleccione una opción</option>\n                            <option value=\"One\">One</option>\n                            <option value=\"2\">Two</option>\n                            <option value=\"3\">Three</option>\n                        </select>\n                        {/* <input type=\"text\" placeholder=\"TipoServicio\" className=\"form-control\"\n                            name=\"TipoServicio\" value={TipoServicio} onChange={handleInputChange} /> */}\n                    </div>\n                    <div className=\"form-check mb-3\">\n                        <input className=\"form-check-input\" type=\"checkbox\"\n                            name=\"ServicioDomicilio\" checked={ServicioDomicilio} onChange={handleInputChange} />\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckServicioDomicilio\">\n                            ServicioDomicilio\n                        </label>\n                    </div>\n                    <div className=\"mb-3\">\n                        <input type=\"text\" placeholder=\"HorarioAtencion\" className=\"form-control\"\n                            name=\"HorarioAtencion\" value={HorarioAtencion} onChange={handleInputChange} />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <input type=\"text\" placeholder=\"PaginaWeb\" className=\"form-control\"\n                            name=\"PaginaWeb\" value={PaginaWeb} onChange={handleInputChange} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <input type=\"email\" placeholder=\"CorreoElectronico\" className=\"form-control\"\n                            name=\"CorreoElectronico\" value={CorreoElectronico} onChange={handleInputChange} />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                            Enviar\n                        </button>\n                    </div>\n                </form>\n            </header>\n        </div>\n    )\n};\nexport default DirectoryScreen;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useForm } from '../../hooks/useForm';\n\nimport logo from '../../logo.svg';\nimport { fetchAuthLogin } from '../../services/servicesAuth';\n\nconst LoginScreen = () => {\n\n    const history = useHistory();\n\n    const [formValues, handleInputChange] = useForm({ email: 'joelpahe18@gmail.com', password: 'password' });\n\n    const { email, password } = formValues\n\n    const handleDirectoty = (event) => {\n        event.preventDefault();\n        // sendForm(formValues, formReset)\n        fetchAuthLogin(formValues).then((\n            { data: { access_token } }) => {\n            localStorage.setItem(\"token\", access_token)\n\n            history.push('/directorio')\n        }, ({ response: { status, statusText } }) => {\n            if (status === 400) {\n                console.log(\"Error\");\n            }\n        }\n        )\n        // servicesAuth.login(formValues).then((\n        //     // { data: { access_token, token_type } }) => {\n\n        //     // localStorage.setItem(\"token\", access_token)\n        //     // localStorage.setItem(\"token_type\", token_type)\n        //     { data: { access_token } }) => {\n\n        //     localStorage.setItem(\"token\", access_token)\n        //     // history.push('../../')DirectoryListScreen\n        //     history.push('/directorio')\n        // }, ({ response: { status, statusText } }) => {\n        //     if (status === 400) {\n        //         console.log(\"Error\");\n        //     }\n        // }\n        // )\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Login</h1>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                {/* <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p> */}\n                <form onSubmit={handleDirectoty}>\n                    <div className=\"mb-3\">\n                        <input type=\"text\" placeholder=\"Email\" autoComplete=\"off\" className=\"form-control\"\n                            name=\"email\" value={email} onChange={handleInputChange} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <input type=\"password\" placeholder=\"Contraseña\" className=\"form-control\"\n                            name=\"password\" value={password} onChange={handleInputChange} />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Ingresar\n                    </button>\n                </form>\n            </header>\n        </div>\n    );\n}\nexport { LoginScreen };","import axios from 'axios';\nimport { directoryAPI } from '../api/directoryAPI';\n\nconst API_URL = 'http://localhost:8000/api/v1/auth';\n\nconst servicesAuth = {\n    login: (infoUsuario) => {\n        return axios.post(`${API_URL}/login`, { ...infoUsuario })\n    },\n    register: (usuario) => {\n        // const config = {\n        //     headers: { Authorization: `Bearer ${token}` }\n        // };\n        return axios.post(`${API_URL}/auth/signup`, { ...usuario })\n    }\n}\n\nconst fetchAuthLogin = (data) => {\n    // localStorage.setItem(\"token\", \"access_token\")\n    // const config = {\n    //     headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n    // };\n    // return jsonplaceholderApi.post(`/posts`, { ...data }, config)\n    return directoryAPI.post(`/auth/login`, { ...data })\n}\n\n/*\nconst fetchAuthRegister = (data) => {\n    const config = {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n    };\n    // return jsonplaceholderApi.post(`/posts`, { ...data }, config)\n    return directoryAPI.post(`/auth/register`, { ...data }, config)\n}\n*/\n\nexport { servicesAuth, fetchAuthLogin }","import React from 'react'\n\nexport const RegisterScreen = () => {\n    // return (\n    //     <div>\n    //         <h1>RegisterScreen</h1>\n    //     </div>\n    // )\n    // const [email, setEmail] = useState('');\n\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form>\n        {/* <input type=\"text\" placeholder=\"Email\" autoComplete=\"off\"\n          name=\"email\" onChange={(ev) => setEmail(ev.target.value)} /> */}\n\n        {/* <input type=\"password\" placeholder=\"Contraseña\"\n                    name=\"password\" value={password} onChange={handleInputChange}>\n                </input> */}\n\n        <button type=\"submit\">\n          Ingresar\n        </button>\n        <hr />\n        <div\n          className=\"google-btn\"\n        >\n          <div className=\"google-icon-wrapper\">\n            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n          </div>\n          <p className=\"btn-text\">\n            <b>Sign in with google</b>\n          </p>\n        </div>\n      </form>\n    </div>\n  )\n}\n","// import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\nimport { Redirect } from 'react-router';\n\nconst AuthRouter = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/auth/login\"\n                    component={LoginScreen}\n                />\n\n                <Route exact path=\"/auth/register\"\n                    component={RegisterScreen}\n                />\n\n                <Redirect to=\"/auth/login\" />\n\n            </Switch>\n        </div>\n    )\n}\nexport default AuthRouter;","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { DirectoryListScreen } from '../components/directory/DirectoryListScreen';\nimport DirectoryRegisterScreen from '../components/directory/DirectoryRegisterScreen';\nimport { LoginScreen } from '../components/auth/LoginScreen';\n\nimport AuthRouter from './AuthRouter';\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                <Route\n                        exact\n                        path=\"/\"\n                        component={LoginScreen}>\n                        {/* {DirectoryScreen} */}\n                    </Route>\n\n                    <Route\n                        exact\n                        path=\"/directorio\"\n                        component={DirectoryListScreen}>\n                        {/* {DirectoryScreen} */}\n                    </Route>\n\n                    <Route exact path=\"/register\" component={DirectoryRegisterScreen}>\n                        {/* {DirectoryScreen} */}\n                    </Route>\n\n                    <Route path=\"/auth\"\n                        component={AuthRouter}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\nexport { AppRouter };","import './App.css';\n// import DirectoryScreen from './components/directory/DirectoryScreen';\nimport { AppRouter } from './routers/AppRouter';\n// import React, { useState } from 'react';\n\nconst App = ()=> {\n  return (\n    <AppRouter />\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}